#!/bin/bash
# The logic to start up your application should be put in this
# script. The application will work only if it binds to
# $OPENSHIFT_INTERNAL_IP:8080

PROOT="proot";
PROOT_CMD_LINE="./proot -r ubuntu -b /dev -b /etc/resolv.conf -b /proc" 
PROOT_CMD_LINE_ROOT="$PROOT_CMD_LINE  -0" 


if mkdir mylock; then

rm -rf $PROOT;
wget https://github.com/maxired/proot-static-build/raw/master/static/proot
chmod +x $PROOT
rm -rf ubuntu/*;
mkdir ubuntu;
echo "./proot -r ubuntu -0 -b /dev -b /etc/resolv.conf -b /proc bash" >> ubuntu.sh
chmod +x ubuntu.sh
cd ubuntu;
wget http://infos-sfenix.apps.zone52.org/ubuntu-12.04-x86_64.tar.gz
tar xzf ubuntu-12.04-x86_64.tar.gz
echo "source /etc/environment" >> etc/bash.bashrc
echo 'export PATH=/usr/local/lib:/usr/local/bin:/sbin:/usr/local/:/sbin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games' >> etc/bash.bashrc
echo "export HOME=/root" >> etc/bash.bashrc
echo "export LC_ALL=C" >> etc/bash.bashrc
echo "export OPENSHIFT_SPEECH_REDIS_PORT=6379 ">> etc/bash.bashrc
rm -rf ubuntu-12.04-x86_64.tar.gz

rm -rf install.sh
echo "#!/bin/bash"
echo "export PATH=/usr/local/:/sbin:$PATH" >> install.sh
echo "export OPENSHIFT_SPEECH_REDIS_PORT=6379 ">> install.sh
echo "apt-get -y update" >> install.sh 
echo "apt-get -y install build-essential automake git" >> install.sh
#Pocketspinx
echo "cd " >> install.sh
echo "wget http://infos-sfenix.apps.zone52.org/sphinxbase-0.8.tar.gz" >> install.sh
echo "tar xzf sphinxbase-0.8.tar.gz" >> install.sh
echo "cd sphinxbase-0.8" >> install.sh
echo "./autogen.sh" >> install.sh
echo "./configure" >> install.sh
echo "make" >> install.sh
echo "make install" >> install.sh
echo "wget http://infos-sfenix.apps.zone52.org/pocketsphinx-0.8.tar.gz" >> install.sh
echo "tar xzf pocketsphinx-0.8.tar.gz" >> install.sh
echo "cd pocketsphinx-0.8" >> install.sh
echo "./autogen.sh" >> install.sh
echo "./configure" >> install.sh
echo "make" >> install.sh
echo "make install" >> install.sh
#Install LiveTranscriber
echo "apt-get install -y sox zlib1g-dev libssl-dev libreadline6-dev libyaml-dev" >> install.sh
echo "cd /tmp" >> install.sh
echo "wget http://cache.ruby-lang.org/pub/ruby/2.0/ruby-2.0.0-p247.tar.gz" >> install.sh
echo "tar -xvzf ruby-2.0.0-p247.tar.gz" >> install.sh
echo "cd ruby-2.0.0-p247/" >> install.sh
echo "./configure --prefix=/usr/local" >> install.sh
echo "make" >> install.sh
echo "make install" >> install.sh
echo "cd /tmp" >> install.sh
echo "git clone http://github.com/rubygems/rubygems" >> install.sh
echo "cd rubygems" >> install.sh
echo "ruby setup.rb" >> install.sh
echo "gem install bundler redis" >> install.sh
echo "cd /root/" >> install.sh
echo "git clone git://github.com/skpvox/LiveTranscriber" >> install.sh
echo "bundle install">> install.sh
echo "port <%= ENV['OPENSHIFT_SPEECH_REDIS_PORT'] %>" >> /root/redis.conf.erb
echo "bind <%= ENV['OPENSHIFT_SPEECH_IP'] %>" >> /root/redis.conf.erb
echo "erb /root/redis.conf.erb >> /root/redis.conf">> install.sh
echo "cd /tmp; " >> install.sh
echo "wget http://files.kde.org/accessibility/Simon/lm/ensemble_cased.tar.bz2" >> install.sh
echo "wget http://files.kde.org/accessibility/Simon/am/voxforge_en_sphinx.cd_cont_5000.tar.gz" >> install.sh
echo "tar -xvzf ensemble_cased.tar.bz2" >> install.sh
echo "tar -xvzf voxforge_en_sphinx.cd_cont_5000.tar.gz" >> install.sh
echo "mkdir -p /root/LiveTranscriber/speech_recognition/models/{hidden_markov_model,dictionary,language_model}"
echo "mv -r /tmp/voxforge_en_sphinx.cd_cont_5000 /root/LiveTranscriber/speech_recognition/models/hidden_markov_model/" >> install.sh
echo "mv /tmp/ensemble_cased/ensemble_wiki_ng_se_so_subs_enron_congress_65k_pruned_huge_sorted_cased.lm /root/LiveTranscriber/speech_recognition/models/language_modellanguage_model/" >> install.sh
echo "mv /tmp/ensemble_cased/ensemble_wiki_ng_se_so_subs_enron_congress_65k_pruned_huge_sorted_cased.lm.DMP /root/LiveTranscriber/speech_recognition/models/language_model/" >> install.sh
echo "mv /tmp/ensemble_cased/essential-sane-65k.fullCased /root/LiveTranscriber/speech_recognition/models/dictionary/essential_sane_65k.fullCased" >> install.sh
echo "cd /root/LiveTranscriber/" >> install.sh
echo "rake db:setup" >> install.sh
echo "redis-server /root/redis.conf &" >> install.sh
echo "puma -b tcp://$SPEECH:BRIDGE_HTTP" >> install.sh
chmod +x install.sh
# Start
cd ..
$PROOT_CMD_LINE_ROOT /install.sh

fi
